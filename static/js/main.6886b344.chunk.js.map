{"version":3,"sources":["StateProviders/StateProvider.js","components/DataFetching/Axios.js","components/Chat/Chat.js","components/SideBar/SideBarChat/SideBarChat.js","components/SideBar/SideBar.js","firebase.js","StateProviders/Reducer.js","components/Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","instance","axios","create","baseURL","Chat","useState","seed","setSeed","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","get","then","response","data","message","room","name","Math","floor","random","channel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","whatmsg","setWhatmsg","sendMessage","event","a","preventDefault","post","displayName","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","lastday","length","Date","timestamp","toDateString","day","lasttime","className","Avatar","src","toString","toLowerCase","IconButton","SearchOutlined","AttachFile","MoreVert","map","id","type","onChange","target","placeholder","onClick","SideBarChat","addNewChat","prompt","to","SideBar","rooms","setRooms","photoURL","_id","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","provider","GoogleAuthProvider","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","result","catch","err","alert","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6886b344.chunk.js","sourcesContent":["import React,{createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer,initialState,children})=>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)} >\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://young-woodland-89279.herokuapp.com\",\r\n});\r\n\r\nexport default instance;\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Chat.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useStateValue } from '../../StateProviders/StateProvider';\r\nimport instance from '../DataFetching/Axios';\r\nimport Pusher from 'pusher-js';\r\n\r\nfunction Chat() {\r\n    \r\n    const [seed, setSeed] = useState('');\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}] = useStateValue()\r\n\r\n\r\n    useEffect(() => {\r\n        instance.get(`/api/v1/messages/sync/${roomId}`).then(response=>\r\n            setMessages(response.data.message));\r\n\r\n            instance.get(`/whatsapp/rooms/sync/${roomId}`).then(response=>{\r\n                setRoomName(response.data.room.name)\r\n                })\r\n    },[roomId])\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    },[roomId]);\r\n\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('c749c0a525d952c26b14', {\r\n        cluster: 'eu'\r\n        });\r\n\r\n        const channel = pusher.subscribe('message');\r\n        channel.bind('inserted', function(data) {\r\n        setMessages([...messages, data]);\r\n        });\r\n\r\n        return ()=>{\r\n        channel.unbind_all();\r\n        channel.unsubscribe();\r\n        }\r\n\r\n    },[messages]);\r\n\r\n    const [whatmsg, setWhatmsg] = useState(\"\")\r\n\r\n    const sendMessage = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        instance.post(`/api/v1/messages/new/${roomId}`,{\r\n            message : whatmsg,\r\n            name : user.displayName\r\n        })\r\n        setWhatmsg(\"\");\r\n    }\r\n\r\n    function formatAMPM(date) {\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n\r\n    const lastday =messages.length>0 ? new Date(messages[messages.length - 1].timestamp).toDateString() : null;\r\n    const day = new Date().toDateString();\r\n    const lasttime =messages.length>0 ? new Date(messages[messages.length - 1].timestamp) : null;\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at {lastday !== null ? day.toString().toLowerCase() === lastday.toString().toLowerCase() ? formatAMPM(lasttime) : (lastday,formatAMPM(lasttime)) : null}</p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                <IconButton>\r\n                        < SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        < AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        < MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.length>0 ? messages.map(message =>{\r\n                    return(\r\n                        <p key={message.id} className={`chat_message ${message.name === user.displayName && `chat_receiver`}`}>\r\n                        <span className=\"chat_name\">\r\n                            {message.name}\r\n                        </span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestamp\">\r\n                            {formatAMPM(new Date(message.timestamp))}\r\n                        </span>\r\n                    </p>\r\n                    )\r\n                }) : null}\r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                < InsertEmoticonIcon />\r\n                <form >\r\n                    <input type=\"text\" value={whatmsg} onChange={(event)=> setWhatmsg(event.target.value)} placeholder='Type a message'/>\r\n                    <button type='submit' onClick={sendMessage} >\r\n                        Send a message\r\n                    </button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport instance from '../../DataFetching/Axios';\r\n\r\nimport './SideBarChat.css';\r\n\r\nfunction SideBarChat({addNewChat,id,name}) {\r\n    const [seed, setSeed] = useState('');\r\n    const [message, setMessages] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    },[]);\r\n\r\n    /*useEffect(() => {\r\n        instance.get(`/api/v1/messages/sync/${id}`).then(response =>\r\n            setMessages(response.data.message))\r\n            \r\n    },[id])*/\r\n\r\n    useEffect(() => {\r\n        instance.get(`/api/v1/messages/sync/${id}`).then(response =>\r\n            setMessages(response.data.message))\r\n    },[id,message])\r\n\r\n    const createChat = ()=>{\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n\r\n        if(roomName){\r\n            instance.post('/whatsapp/rooms/new',{\r\n                name : roomName\r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return !addNewChat ?(\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className='sidebarChat'>\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"sidebarChat_info\">\r\n                <h2>{name}</h2>\r\n                <p>{message[message.length - 1]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Add New Chat</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarChat\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SideBarChat from './SideBarChat/SideBarChat';\r\nimport instance from '../DataFetching/Axios';\r\nimport { useStateValue } from '../../StateProviders/StateProvider';\r\nimport Pusher from 'pusher-js';\r\n\r\nfunction SideBar() {\r\n    const [rooms,setRooms]= useState([]);\r\n    const [{user},] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        const pusher = new Pusher('c749c0a525d952c26b14', {\r\n            cluster: 'eu'\r\n            });\r\n    \r\n            const channel = pusher.subscribe('room');\r\n            channel.bind('inserted', function(data) {\r\n            setRooms([...rooms, data]);\r\n            });\r\n\r\n        return ()=>{\r\n            channel.unbind_all();\r\n            channel.unsubscribe(); \r\n        }\r\n    },[rooms])\r\n\r\n    useEffect(() => {\r\n        instance.get(\"/whatsapp/rooms/sync\").then(response=>{\r\n        setRooms(response.data.room)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className=\"sidebar_header\">\r\n                < Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        < DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        < ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        < MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    < SearchOutlined />\r\n                    <input type=\"text\" placeholder=\"Search or start new chat\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SideBarChat addNewChat />\r\n                {rooms.map(room=>{\r\n                    return <SideBarChat key={room._id} id={room._id} name={room.name} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAYjI3Xa9-g2B7yL-Hb2Mi4avglUGh5qUs\",\r\n    authDomain: \"whatsapp-mern-dad7e.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-mern-dad7e.firebaseio.com\",\r\n    projectId: \"whatsapp-mern-dad7e\",\r\n    storageBucket: \"whatsapp-mern-dad7e.appspot.com\",\r\n    messagingSenderId: \"47599962661\",\r\n    appId: \"1:47599962661:web:14ead55b4d3367e9a1cdcc\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","export const initialState = {\r\n    user : null\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state , action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user : action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport { auth, provider } from '../../firebase';\r\nimport { useStateValue } from '../../StateProviders/StateProvider';\r\nimport { actionTypes } from '../../StateProviders/Reducer';\r\n\r\nfunction Login() {\r\n\r\n    const [{} , dispatch] = useStateValue();\r\n\r\n    const signIn = () =>{\r\n        auth.signInWithPopup(provider).then(\r\n            result => dispatch({\r\n                type : actionTypes.SET_USER,\r\n                user : result.user\r\n            })\r\n        ).catch(\r\n            err => alert(err.message)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://i.pinimg.com/originals/99/0b/7d/990b7d2c2904f8cd9bc884d3eed6d003.png\" alt=\"Whatsapp Logo\"/>\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to whatsapp</h1>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn} >\r\n                    Sign in with google\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport Chat from './components/Chat/Chat';\nimport SideBar from './components/SideBar/SideBar';\nimport {Route,Switch,BrowserRouter as Router } from 'react-router-dom'\nimport Login from './components/Login/Login';\nimport { useStateValue } from './StateProviders/StateProvider';\n\nfunction App() {\n  \n  const [{user},] = useStateValue(null);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      )\n      :(<div className=\"app_body\">\n        <Router>\n          <SideBar />\n          <Switch>\n              <Route exact path=\"/rooms/:roomId\">\n                  <Chat  />\n              </Route>\n              <Route exact path=\"/app\" >\n                {<Chat  />}\n              </Route>\n          </Switch>\n        </Router>\n      </div>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProviders/StateProvider';\nimport reducer, { initialState } from './StateProviders/Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}